<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文章标题M</title>
    <link href="/2020/05/28/y/"/>
    <url>/2020/05/28/y/</url>
    
    <content type="html"><![CDATA[<p>SR</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的自建文件</title>
    <link href="/2020/05/10/%E6%88%91%E7%9A%84%E8%87%AA%E5%BB%BA%E6%96%87%E4%BB%B6/"/>
    <url>/2020/05/10/%E6%88%91%E7%9A%84%E8%87%AA%E5%BB%BA%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>我的自建文件</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/j/"/>
    <url>/2019/10/10/j/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/b/"/>
    <url>/2019/10/10/b/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/d/"/>
    <url>/2019/10/10/d/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题T</title>
    <link href="/2019/10/10/hello-world/"/>
    <url>/2019/10/10/hello-world/</url>
    
    <content type="html"><![CDATA[<h3 id="1-vue生命周期总共有几个阶段？"><a href="#1-vue生命周期总共有几个阶段？" class="headerlink" title="1.vue生命周期总共有几个阶段？"></a>1.vue生命周期总共有几个阶段？</h3><p>八个阶段，创建前/后, 载入前/后,更新前/后,销毁前/销毁后</p><h3 id="2-v-if和v-show的区别？"><a href="#2-v-if和v-show的区别？" class="headerlink" title="2.v-if和v-show的区别？"></a>2.v-if和v-show的区别？</h3><p>v-if和v-show都是控制元素的显示和隐藏，区别是v-if将元素添加或者删除，v-show控制的是元素的css样式实现隐藏或者显示</p><h3 id="3-route和-router的区别？"><a href="#3-route和-router的区别？" class="headerlink" title="3.$route和$router的区别？"></a>3.$route和$router的区别？</h3><p>$route是路由器信息对象，$router是要跳转的路由</p><p>$router是VueRouter的实例，用于跳转页面</p><h3 id="4-vue-js的两个核心是什么？"><a href="#4-vue-js的两个核心是什么？" class="headerlink" title="4.vue.js的两个核心是什么？"></a>4.vue.js的两个核心是什么？</h3><p>数据驱动和组件化</p><h3 id="5-vue常用的指令？"><a href="#5-vue常用的指令？" class="headerlink" title="5.vue常用的指令？"></a>5.vue常用的指令？</h3><p>v-on、v-if、v-bind、v-model、v-text、v-html、v-for、v-show、</p><h3 id="6-vue常用的修饰符？"><a href="#6-vue常用的修饰符？" class="headerlink" title="6.vue常用的修饰符？"></a>6.vue常用的修饰符？</h3><p>.lazy、.trim、.number、.stop、.prevent、.sync</p><h3 id="7-v-on可以绑定多个方法吗？"><a href="#7-v-on可以绑定多个方法吗？" class="headerlink" title="7.v-on可以绑定多个方法吗？"></a>7.v-on可以绑定多个方法吗？</h3><p>可以，&lt;p @click=”one(),two()”&gt;点击</p></p><h3 id="8-vue中子组件调用父组件的方法是什么？"><a href="#8-vue中子组件调用父组件的方法是什么？" class="headerlink" title="8.vue中子组件调用父组件的方法是什么？"></a>8.vue中子组件调用父组件的方法是什么？</h3><p>通过$parent.xxx();</p><h3 id="9-怎么定义vue-router的动态路由？怎么获取穿过来的值？"><a href="#9-怎么定义vue-router的动态路由？怎么获取穿过来的值？" class="headerlink" title="9.怎么定义vue-router的动态路由？怎么获取穿过来的值？"></a>9.怎么定义vue-router的动态路由？怎么获取穿过来的值？</h3><ul><li>动态路由的创建，主要是使用path属性过程中，使用动态路径参数，以冒号开头，如下：</li></ul><pre><code class="hljs plain">&#123;  path: &#39;&#x2F;details&#x2F;:id&#39;  name: &#39;Details&#39;  components: Details&#125;</code></pre><p>访问details目录下的所有文件，如果details/a，details/b等，都会映射到Details组件上。</p><ul><li>当匹配到/details下的路由时，参数值会被设置到this.$route.params下，所以通过这个属性可以获取动态参数</li></ul><h3 id="10-vue中key值的作用是什么？"><a href="#10-vue中key值的作用是什么？" class="headerlink" title="10.vue中key值的作用是什么？"></a>10.vue中key值的作用是什么？</h3><p>key的作用增强dom元素的渲染效率</p><p>当 Vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用“就地复用”策略。如果数据项的顺序被改变，Vue 将不会移动 DOM 元素来匹配数据项的顺序， 而是简单复用此处每个元素，并且确保它在特定索引下显示已被渲染过的每个元素。key的作用主要是为了高效的更新虚拟DOM</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/h/"/>
    <url>/2019/10/10/h/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/i/"/>
    <url>/2019/10/10/i/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/abc/"/>
    <url>/2019/10/10/abc/</url>
    
    <content type="html"><![CDATA[<p>111111111111111111111111</p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/k/"/>
    <url>/2019/10/10/k/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/l/"/>
    <url>/2019/10/10/l/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/n/"/>
    <url>/2019/10/10/n/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/m/"/>
    <url>/2019/10/10/m/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/a/"/>
    <url>/2019/10/10/a/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/c/"/>
    <url>/2019/10/10/c/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><p><a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/one-command-deployment.html</a>)</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>上传文件到七牛云</title>
    <link href="/2019/05/29/%E4%B8%83%E7%89%9B%E4%BA%91/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E5%88%B0%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    <url>/2019/05/29/%E4%B8%83%E7%89%9B%E4%BA%91/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E5%88%B0%E4%B8%83%E7%89%9B%E4%BA%91/</url>
    
    <content type="html"><![CDATA[<h3 id="1-引入七牛云依赖"><a href="#1-引入七牛云依赖" class="headerlink" title="1.引入七牛云依赖"></a>1.引入七牛云依赖</h3><pre><code class="hljs java">&lt;!--引入七牛云--&gt;&lt;dependency&gt;    &lt;groupId&gt;com.qiniu&lt;/groupId&gt;    &lt;artifactId&gt;qiniu-java-sdk&lt;/artifactId&gt;    &lt;version&gt;7.2.27&lt;/version&gt;&lt;/dependency&gt;</code></pre><h3 id="2-在application-yml文件中进行配置"><a href="#2-在application-yml文件中进行配置" class="headerlink" title="2.在application.yml文件中进行配置"></a>2.在application.yml文件中进行配置</h3><p>需要的配置项：</p><ol><li><p><code>domain</code>域名，用于上传文件成功后把文件访问路径返还回去，在内容管理中</p><p><img src="https://qiaozixing-image.oss-cn-beijing.aliyuncs.com/imagejietu00011.png" srcset="/img/loading.gif" alt="jietu00011"></p></li><li><p><code>access-key</code>和<code>secret-key</code>密钥，在个人中心的密钥管理中查看</p></li></ol><p><img src="https://qiaozixing-image.oss-cn-beijing.aliyuncs.com/imagesjietu00012.png" srcset="/img/loading.gif" alt="jietu00012"></p><pre><code>3. `bucket`存储空间名称</code></pre><pre><code class="hljs plain">upload:  qiniu:    domain: 填你的域名    access-key: 你的accesskey    secret-key: 你的secretKey    bucket: 你的存储空间名，我这里为colablog</code></pre><h3 id="3-编写上传配置类"><a href="#3-编写上传配置类" class="headerlink" title="3.编写上传配置类"></a>3.编写上传配置类</h3><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.bos.util;<span class="hljs-keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;<span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<span class="hljs-comment">/**</span><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span>: admin</span><span class="hljs-comment"> * <span class="hljs-doctag">@CreateTime</span>: 2019-12-18 18:22</span><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span>:</span><span class="hljs-comment"> */</span><span class="hljs-meta">@Component</span><span class="hljs-meta">@ConfigurationProperties</span>(prefix = <span class="hljs-string">"upload"</span>)<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UploadProperties</span> </span>&#123;    <span class="hljs-keyword">private</span> Local local = <span class="hljs-keyword">new</span> Local();    <span class="hljs-function"><span class="hljs-keyword">public</span> Local <span class="hljs-title">getLocal</span><span class="hljs-params">()</span> </span>&#123;        <span class="hljs-keyword">return</span> local;    &#125;    <span class="hljs-comment">/**</span><span class="hljs-comment">     * <span class="hljs-doctag">@author</span>: Johnson</span><span class="hljs-comment">     * <span class="hljs-doctag">@Date</span>: 2019/12/16</span><span class="hljs-comment">     * 本地上传配置</span><span class="hljs-comment">     */</span>    <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Local</span> </span>&#123;<span class="hljs-comment">//        ...</span>    &#125;    <span class="hljs-keyword">private</span> Qiniu qiniu = <span class="hljs-keyword">new</span> Qiniu();    <span class="hljs-function"><span class="hljs-keyword">public</span> Qiniu <span class="hljs-title">getQiniu</span><span class="hljs-params">()</span> </span>&#123;        <span class="hljs-keyword">return</span> qiniu;    &#125;    <span class="hljs-comment">/**</span><span class="hljs-comment">     * <span class="hljs-doctag">@author</span>: Johnson</span><span class="hljs-comment">     * <span class="hljs-doctag">@Date</span>: 2019/12/16</span><span class="hljs-comment">     * 七牛云上传配置</span><span class="hljs-comment">     */</span>    <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Qiniu</span> </span>&#123;        <span class="hljs-comment">/**</span><span class="hljs-comment">         * 域名</span><span class="hljs-comment">         */</span>        <span class="hljs-keyword">private</span> String domain;        <span class="hljs-comment">/**</span><span class="hljs-comment">         * 从下面这个地址中获取accessKey和secretKey</span><span class="hljs-comment">         * https://portal.qiniu.com/user/key</span><span class="hljs-comment">         */</span>        <span class="hljs-keyword">private</span> String accessKey;        <span class="hljs-keyword">private</span> String secretKey;        <span class="hljs-comment">/**</span><span class="hljs-comment">         * 存储空间名</span><span class="hljs-comment">         */</span>        <span class="hljs-keyword">private</span> String bucket;        <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getDomain</span><span class="hljs-params">()</span> </span>&#123;            <span class="hljs-keyword">return</span> domain;        &#125;        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setDomain</span><span class="hljs-params">(String domain)</span> </span>&#123;            <span class="hljs-keyword">this</span>.domain = domain;        &#125;        <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getAccessKey</span><span class="hljs-params">()</span> </span>&#123;            <span class="hljs-keyword">return</span> accessKey;        &#125;        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setAccessKey</span><span class="hljs-params">(String accessKey)</span> </span>&#123;            <span class="hljs-keyword">this</span>.accessKey = accessKey;        &#125;        <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getSecretKey</span><span class="hljs-params">()</span> </span>&#123;            <span class="hljs-keyword">return</span> secretKey;        &#125;        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setSecretKey</span><span class="hljs-params">(String secretKey)</span> </span>&#123;            <span class="hljs-keyword">this</span>.secretKey = secretKey;        &#125;        <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getBucket</span><span class="hljs-params">()</span> </span>&#123;            <span class="hljs-keyword">return</span> bucket;        &#125;        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setBucket</span><span class="hljs-params">(String bucket)</span> </span>&#123;            <span class="hljs-keyword">this</span>.bucket = bucket;        &#125;    &#125;&#125;</code></pre><h3 id="4-写一个上传文件的接口和实现类"><a href="#4-写一个上传文件的接口和实现类" class="headerlink" title="4.写一个上传文件的接口和实现类"></a>4.写一个上传文件的接口和实现类</h3><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UploadFile</span> </span>&#123;    <span class="hljs-function">String <span class="hljs-title">uploadFile</span><span class="hljs-params">(MultipartFile file)</span></span>;&#125;</code></pre><p><strong>实现类：</strong>重点，通过Region.xxx指点存储空间所在的区域，华东<code>Region.region0()</code>,华北<code>Region.region1()</code>，华南<code>Region.region2()</code>,北美<code>Region.regionNa0()</code></p><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.bos.base.service.impl;<span class="hljs-keyword">import</span> com.bos.base.service.UploadFile;<span class="hljs-keyword">import</span> com.bos.util.UploadProperties;<span class="hljs-keyword">import</span> org.springframework.web.multipart.MultipartFile;<span class="hljs-keyword">import</span> com.qiniu.http.Response;<span class="hljs-keyword">import</span> com.qiniu.storage.Configuration;<span class="hljs-keyword">import</span> com.qiniu.storage.Region;<span class="hljs-keyword">import</span> com.qiniu.storage.UploadManager;<span class="hljs-keyword">import</span> com.qiniu.util.Auth;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">import</span> java.util.UUID;<span class="hljs-comment">/**</span><span class="hljs-comment"> * <span class="hljs-doctag">@Author</span>: admin</span><span class="hljs-comment"> * <span class="hljs-doctag">@CreateTime</span>: 2019-12-18 18:24</span><span class="hljs-comment"> * <span class="hljs-doctag">@Description</span>:</span><span class="hljs-comment"> */</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UploadFileQiniu</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">UploadFile</span> </span>&#123;    <span class="hljs-keyword">private</span> UploadProperties.Qiniu properties;    <span class="hljs-comment">//构造一个带指定Region对象的配置类</span>    <span class="hljs-keyword">private</span> Configuration cfg = <span class="hljs-keyword">new</span> Configuration(Region.region2());    <span class="hljs-keyword">private</span> UploadManager uploadManager= <span class="hljs-keyword">new</span> UploadManager(cfg);    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">UploadFileQiniu</span><span class="hljs-params">(UploadProperties.Qiniu properties)</span> </span>&#123;        <span class="hljs-keyword">this</span>.properties = properties;    &#125;    <span class="hljs-comment">/**</span><span class="hljs-comment">     * <span class="hljs-doctag">@author</span>: Johnson</span><span class="hljs-comment">     */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">uploadFile</span><span class="hljs-params">(MultipartFile file)</span> </span>&#123;        Auth auth = Auth.create(properties.getAccessKey(), properties.getSecretKey());        String token = auth.uploadToken(properties.getBucket());        <span class="hljs-keyword">try</span> &#123;            String originalFilename = file.getOriginalFilename();            <span class="hljs-comment">// 文件后缀</span>            String suffix = originalFilename.substring(originalFilename.lastIndexOf(<span class="hljs-string">"."</span>));            System.out.println(<span class="hljs-string">"文件后缀----&gt;"</span>+suffix);            String fileKey = UUID.randomUUID().toString() + suffix;            System.out.println(<span class="hljs-string">"文件后缀fileKey----&gt;"</span>+fileKey);            Response response = uploadManager.put(file.getInputStream(), fileKey, token, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>);            System.out.println(<span class="hljs-string">"响应response----&gt;"</span>+response);            <span class="hljs-keyword">return</span> properties.getDomain() + fileKey;        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;            e.printStackTrace();        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-string">"error"</span>;    &#125;&#125;</code></pre><h3 id="调用文件上传"><a href="#调用文件上传" class="headerlink" title="调用文件上传"></a>调用文件上传</h3><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">"/upload"</span>)<span class="hljs-meta">@CrossOrigin</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UploadFileController</span> </span>&#123;    <span class="hljs-meta">@Autowired</span>    UploadProperties uploadProperties;    <span class="hljs-meta">@PostMapping</span>(<span class="hljs-string">"/img"</span>)    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">uploadFileYun</span><span class="hljs-params">(@RequestParam(<span class="hljs-string">"file"</span>)</span> MultipartFile file) </span>&#123;        <span class="hljs-comment">// 上传到七牛云</span>        UploadFile uploadFile = <span class="hljs-keyword">new</span> UploadFileQiniu(uploadProperties.getQiniu());        <span class="hljs-keyword">return</span> uploadFile.uploadFile(file);    &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>七牛云</category>
      
    </categories>
    
    
    <tags>
      
      <tag>七牛云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>myfile中的文件</title>
    <link href="/2012/05/10/myfile/index/"/>
    <url>/2012/05/10/myfile/index/</url>
    
    <content type="html"><![CDATA[<p>myfile中的文件</p><h3 id="引用网络图片"><a href="#引用网络图片" class="headerlink" title="引用网络图片"></a>引用网络图片</h3><p><img src="https://github.com/qiaozixing/qiaozixing.github.io/blob/master/img/avatar.png" srcset="/img/loading.gif" alt="11"></p><h3 id="引用本地图片"><a href="#引用本地图片" class="headerlink" title="引用本地图片"></a>引用本地图片</h3><p><img src="E:%5CmyBlog%5Cmyblog%5Csource%5C_posts%5Cmyfile%5Cjietu00011.png" srcset="/img/loading.gif" alt=""></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
